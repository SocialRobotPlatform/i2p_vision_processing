#pragma once
#include <vector>
#include <cxcore.h>
#include <cv.h>

class Line2D
{
public:
	Line2D(void) {}
	Line2D(cv::Point p1, cv::Point p2) : P1(p1), P2(p2) {}
public:
	cv::Point P1, P2;
};

inline void GetDistinctColor(int n, unsigned char &R, unsigned char &G, unsigned char &B)
{
	n = n % 56;
	static int nColourValues[56] = 
	{ 
		0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, 0x800000, 
		0x008000, 0x000080, 0x808000, 0x800080, 0x008080, 0x808080, 0xC00000, 
		0x00C000, 0x0000C0, 0xC0C000, 0xC000C0, 0x00C0C0, 0xC0C0C0, 0x004040, 
		0x400000, 0x004000, 0x000040, 0x404000, 0x400040, 0x404040, 0x200000, 
		0x002000, 0x000020, 0x202000, 0x200020, 0x002020, 0x202020, 0x600000, 
		0x006000, 0x000060, 0x606000, 0x600060, 0x006060, 0x606060, 0xA00000, 
		0x00A000, 0x0000A0, 0xA0A000, 0xA000A0, 0x00A0A0, 0xA0A0A0, 0xE00000, 
		0x00E000, 0x0000E0, 0xE0E000, 0xE000E0, 0x00E0E0, 0xE0E0E0, 0x000000
	};
	R = (nColourValues[n] & 0xFF0000) >> 16;
	G = (nColourValues[n] & 0x00FF00) >> 8;
	B = nColourValues[n] & 0x0000FF;
}

inline cv::Vec3b GetDistinctColor(int n)
{
	n = n % 56;
	static int nColourValues[56] = 
	{ 
		0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, 0x800000, 
		0x008000, 0x000080, 0x808000, 0x800080, 0x008080, 0x808080, 0xC00000, 
		0x00C000, 0x0000C0, 0xC0C000, 0xC000C0, 0x00C0C0, 0xC0C0C0, 0x004040, 
		0x400000, 0x004000, 0x000040, 0x404000, 0x400040, 0x404040, 0x200000, 
		0x002000, 0x000020, 0x202000, 0x200020, 0x002020, 0x202020, 0x600000, 
		0x006000, 0x000060, 0x606000, 0x600060, 0x006060, 0x606060, 0xA00000, 
		0x00A000, 0x0000A0, 0xA0A000, 0xA000A0, 0x00A0A0, 0xA0A0A0, 0xE00000, 
		0x00E000, 0x0000E0, 0xE0E000, 0xE000E0, 0x00E0E0, 0xE0E0E0, 0x000000
	};
	unsigned char R = (nColourValues[n] & 0xFF0000) >> 16;
	unsigned char G = (nColourValues[n] & 0x00FF00) >> 8;
	unsigned char B = nColourValues[n] & 0x0000FF;
	return cv::Vec3b(B, G, R);
}

// convert monochrome to color
cv::Vec3b MonoToColor(double fValue, double fMin, double fMax, bool bInverse = false);
void MonoToColor(const cv::Mat &mtxMonoImg, cv::Mat &mtxColorImg, double fMin, double fMax, bool bInverse = false);